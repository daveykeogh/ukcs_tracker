from BeautifulSoup import BeautifulSoup
import re
import simplejson as json

# TODO: Add dateTime to the response so we know when the data was sampled

class DataParsingException(Exception):
        pass

class Server():
	def __init__(self):
		self._server_name = None
		self._ip_and_port = None
		self._user_state = None	
	def _dump(self):
		return { 'name': str(self.name),
			 'ip': str(self.ip),
			 'port': int(self.port),
			 'description': str(self.description),
		         'current': int(self.current),
			 'max': int(self.max),
			 'mapname': str(self.mapname),
			}
	@property
	def dump(self):
		return self._dump()
			
	
class ServerStatus():
	"""
	Parser to extract data from the server status page:
	http://www.ukcs.net/phpua/index.php
	"""
	def __init__(self, dataObject):
		"""
		Object Initialisation
		"""
		self._server_list = []
		self._full_dict = {}
		self._soup = BeautifulSoup(dataObject.html)
		self._parser()
		self._table_parser()
		self._data_tidy()

	def _parser(self):
		"""
		Get details out of the status page
		"""
	 	self._title = self._soup.title	
		self._table_array = self._soup.findAll('table', {"width": "60%"})

	def _table_parser(self):
		"""
		Pull out the server status
		"""
		for entry in self._table_array:
			a = Server()
			a._server_name = entry.find("div", {"style": "float:left;"}).text
			a._ip_and_port = entry.find("div", {"style": "float:right;"}).text
			a._user_state = entry.find("td", {"class": "lightcell"}).text
			self._server_list.append(a)

	def _data_tidy(self):
		"""
		Tidies up data for display, uses regexes to find state
		"""
		for server in self._server_list:
			server.name, server.description = server._server_name.split(' - ')[:2]
			server.ip, server.port = server._ip_and_port.split(':')
			server.current, server.max = re.findall('\d+\/\d+', server._user_state)[0].split('/')
			server.mapname = re.findall('\S+\|', server._user_state)[0].split('|')[0]
		for server in self._server_list:
			self._full_dict[server.name] = server.dump
		
	@property
	def soup(self):
		return self._soup

	@property
	def json(self):
		return json.dumps(self._full_dict)
	
	@property
	def json_print(self):
		return json.dumps(self._full_dict, indent=4)

	@property
	def py_dict(self):
		return self._full_dict

if __name__=="__main__":
	from Data import Retrieve
	a = Retrieve()
	b = ServerStatus(a)
	print b.json_print
	
